<?xml version="1.0" encoding="UTF-8" ?>
<project name="RocksCluster" id="Project-611" database="Sqlite" >
	<comment><![CDATA[Rocks Cluster Schema 2.0]]></comment>
	<schema name="Default" >
		<table name="appliances" >
			<comment><![CDATA[logical appliances (e.g., compute, login, nas, frontend, switch, ... )]]></comment>
			<column name="ID" type="INTEGER" jt="4" mandatory="y" />
			<column name="name" type="VARCHAR" length="128" jt="12" mandatory="y" />
			<column name="graphStart" type="VARCHAR" length="128" jt="12" >
				<comment><![CDATA[Where to start in a configuration graph]]></comment>
			</column>
			<column name="description" type="VARCHAR" length="512" jt="12" />
			<column name="graph" type="VARCHAR" length="125" jt="12" >
				<defo><![CDATA['default']]></defo>
			</column>
			<column name="reslevel" prior="priority" type="INTEGER" jt="4" >
				<comment><![CDATA[reference to the 'appliances' reslevel in the reslevels table]]></comment>
			</column>
			<column name="reskey" type="VARCHAR" length="256" jt="12" definition="(name)" spec="computed" />
			<index name="pk_appliances" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<fk name="fk_appliances_priorities" to_schema="Default" to_table="reslevels" delete_action="cascade" update_action="cascade" >
				<fk_column name="reslevel" pk="ID" />
			</fk>
		</table>
		<table name="attrs" >
			<comment><![CDATA[key, value storage.   (Attr,Priority) must be a unique combination]]></comment>
			<column name="ID" type="INTEGER" jt="4" mandatory="y" />
			<column name="attr" type="VARCHAR" length="128" jt="12" mandatory="y" >
				<comment><![CDATA[name of attribute]]></comment>
			</column>
			<column name="value" type="VARCHAR" length="512" jt="12" />
			<column name="shadow" type="VARCHAR" length="512" jt="12" >
				<comment><![CDATA[previous version of attribute]]></comment>
			</column>
			<column name="reslevel" prior="priority" type="INTEGER" jt="4" >
				<comment><![CDATA[resolution level of this attribute.  Reference to reslevels table. Common resllevels are global, appliance, node]]></comment>
			</column>
			<column name="reskey" prior="pkey" type="VARCHAR" length="512" jt="12" >
				<defo><![CDATA['global']]></defo>
				<comment><![CDATA[This is the key into the reslevel.  E.g. reslevel.resname='compute', then  reskey could be compute-0-0 for a node-specific attribute   reslevel.resname='appliance,' reskey could be 'login' for an appliance-specific attribute. If unspecified, a trigger will put this as the global reslevel with 'global' reskey.]]></comment>
			</column>
			<index name="pk_attrs" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="unq_attrs" unique="UNIQUE_INDEX" >
				<column name="attr" />
				<column name="reslevel" />
				<column name="reskey" />
			</index>
			<fk name="fk_attrs_priorities" to_schema="Default" to_table="reslevels" delete_action="cascade" update_action="cascade" >
				<fk_column name="reslevel" pk="ID" />
			</fk>
		</table>
		<table name="bootactions" >
			<comment><![CDATA[PXE boot configurations]]></comment>
			<column name="ID" type="INTEGER" jt="4" mandatory="y" />
			<column name="action" type="VARCHAR" length="128" jt="12" >
				<comment><![CDATA[logical name of action: eg. 'os', 'install', 'install headless', ...]]></comment>
			</column>
			<column name="kernel" type="VARCHAR" length="256" jt="12" />
			<column name="ramdisk" type="VARCHAR" length="256" jt="12" />
			<column name="Flags" type="VARCHAR" length="1025" jt="12" />
			<index name="pk_bootactions" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="bootflags" >
			<column name="ID" type="INTEGER" jt="4" mandatory="y" />
			<column name="node" type="INTEGER" jt="4" mandatory="y" />
			<column name="flags" type="VARCHAR" length="256" jt="12" mandatory="y" />
			<index name="pk_bootflags" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<fk name="fk_bootflags" to_schema="Default" to_table="nodes" delete_action="cascade" update_action="cascade" >
				<fk_column name="node" pk="ID" />
			</fk>
		</table>
		<table name="distributions" >
			<column name="ID" type="INTEGER" jt="4" mandatory="y" />
			<column name="name" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="OS_release" type="VARCHAR" length="32" jt="12" />
			<column name="lang" type="VARCHAR" length="128" jt="12" />
			<index name="pk_distributions" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="firewalls" >
			<comment><![CDATA[Firewall rules]]></comment>
			<column name="ID" type="INTEGER" jt="4" mandatory="y" />
			<column name="Rulename" type="VARCHAR" length="128" jt="12" mandatory="y" />
			<column name="Rulesrc" type="VARCHAR" length="16" jt="12" mandatory="y" >
				<comment><![CDATA['system' or 'custom']]></comment>
			</column>
			<column name="InSubnet" type="INTEGER" jt="4" />
			<column name="OutSubnet" type="INTEGER" jt="4" />
			<column name="Service" type="VARCHAR" length="256" jt="12" />
			<column name="Protocol" type="VARCHAR" length="256" jt="12" />
			<column name="Action" type="VARCHAR" length="256" jt="12" >
				<comment><![CDATA[e.g. ACCEPT, DROP, REJECT]]></comment>
			</column>
			<column name="Chain" type="VARCHAR" length="256" jt="12" >
				<comment><![CDATA[Firewall chain (e.g. output, input)]]></comment>
			</column>
			<column name="flags" type="VARCHAR" length="256" jt="12" >
				<comment><![CDATA[flags portion of firewall rule]]></comment>
			</column>
			<column name="Comment" type="VARCHAR" length="256" jt="12" >
				<comment><![CDATA[Human readable]]></comment>
			</column>
			<column name="reslevel" prior="priority" type="INTEGER" jt="4" >
				<comment><![CDATA[reference to reslevels table]]></comment>
			</column>
			<column name="reskey" prior="pkey" type="VARCHAR" length="256" jt="12" mandatory="y" >
				<defo><![CDATA['global']]></defo>
				<comment><![CDATA[reslevel key (e.g. compute-0-0 for a node-level resolution)]]></comment>
			</column>
			<index name="pk_firewalls" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="unq_firewalls" unique="UNIQUE_KEY" >
				<comment><![CDATA[Any rulename must be unique within the reslevel, reskey combination]]></comment>
				<column name="reslevel" />
				<column name="Rulename" />
				<column name="reskey" />
			</index>
			<fk name="fk_firewalls" to_schema="Default" to_table="subnets" delete_action="cascade" update_action="cascade" >
				<fk_column name="InSubnet" pk="ID" />
			</fk>
			<fk name="fk_firewalls_0" to_schema="Default" to_table="subnets" delete_action="cascade" update_action="cascade" >
				<fk_column name="OutSubnet" pk="ID" />
			</fk>
			<fk name="fk_firewalls_1" to_schema="Default" to_table="reslevels" delete_action="cascade" update_action="cascade" >
				<fk_column name="reslevel" pk="ID" />
			</fk>
		</table>
		<table name="groupmembers" >
			<column name="ID" type="INTEGER" jt="4" mandatory="y" />
			<column name="nodegroup" type="INTEGER" jt="4" />
			<column name="nodeid" type="INTEGER" jt="4" />
			<index name="pk_groupmembers" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<fk name="fk_groupmembers_nodes" to_schema="Default" to_table="nodes" delete_action="cascade" update_action="cascade" >
				<fk_column name="nodeid" pk="ID" />
			</fk>
			<fk name="fk_groupmembers" to_schema="Default" to_table="nodegroups" delete_action="cascade" update_action="cascade" >
				<fk_column name="nodegroup" pk="ID" />
			</fk>
		</table>
		<table name="hwinventory" >
			<comment><![CDATA[key hardware components of nodes, e.g., cores, gpus, memory,  (Node,component,subtype) must be a unique]]></comment>
			<column name="ID" type="INTEGER" jt="4" mandatory="y" />
			<column name="node" type="INTEGER" jt="4" mandatory="y" >
				<comment><![CDATA[cross reference to nodes table]]></comment>
			</column>
			<column name="component" type="INTEGER" jt="4" mandatory="y" >
				<comment><![CDATA[component  (e.g. cores, gpu, TPMs, etc)]]></comment>
			</column>
			<column name="subtype" type="VARCHAR" length="128" jt="12" mandatory="y" >
				<defo><![CDATA['generic']]></defo>
				<comment><![CDATA[subtype of component - e.g. if a gpu, subtype could specific part.  If there is no subtype specified it defaults to 'generic']]></comment>
			</column>
			<column name="count" type="INTEGER" jt="4" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[count of this component on this node]]></comment>
			</column>
			<column name="comment" type="VARCHAR" length="512" jt="12" >
				<comment><![CDATA[optional comment]]></comment>
			</column>
			<index name="pk_hwinventory" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="unq_hwinventory" unique="UNIQUE_KEY" >
				<column name="node" />
				<column name="component" />
				<column name="subtype" />
			</index>
			<fk name="fk_hwinventory_nodes" to_schema="Default" to_table="nodes" delete_action="cascade" update_action="cascade" >
				<fk_column name="node" pk="ID" />
			</fk>
		</table>
		<table name="ipaddrs" prior="IPaddrs" >
			<comment><![CDATA[IP Addresseses]]></comment>
			<column name="ID" type="INTEGER" jt="4" mandatory="y" />
			<column name="netdev" type="INTEGER" jt="4" mandatory="y" />
			<column name="addr" type="VARCHAR" length="256" jt="12" />
			<column name="subnet" type="INTEGER" jt="4" />
			<index name="pk_IPaddrs" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<fk name="fk_ipaddrs" to_schema="Default" to_table="netdevs" delete_action="cascade" update_action="cascade" >
				<fk_column name="netdev" pk="ID" />
			</fk>
			<fk name="fk_ipaddrs_0" to_schema="Default" to_table="subnets" delete_action="cascade" update_action="cascade" >
				<fk_column name="subnet" pk="ID" />
			</fk>
		</table>
		<table name="netdevs" prior="netdevices" >
			<column name="ID" type="INTEGER" jt="4" mandatory="y" />
			<column name="device" type="VARCHAR" length="128" jt="12" />
			<column name="mac" type="VARCHAR" length="128" jt="12" />
			<column name="module" type="VARCHAR" length="32" jt="12" />
			<column name="options" type="VARCHAR" length="256" jt="12" />
			<column name="node" type="INTEGER" jt="4" />
			<column name="VLANID" type="INTEGER" jt="4" >
				<comment><![CDATA[VLANID associated with interface]]></comment>
			</column>
			<column name="devtype" type="VARCHAR" length="32" jt="12" >
				<defo><![CDATA['physical']]></defo>
				<comment><![CDATA[enumerated type of "physical", "vlan", "bridge"]]></comment>
			</column>
			<index name="unq_netdevices_ID" unique="UNIQUE_KEY" >
				<column name="ID" />
			</index>
			<index name="pk_netdevs" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<constraint name="Cns_netdevs" >
				<string><![CDATA[devtype in ('physical', 'vlan', 'bridge','ipmi')]]></string>
				<comment><![CDATA[ensure that devtype is enumerated]]></comment>
			</constraint>
			<fk name="fk_netdevs" to_schema="Default" to_table="vlans" delete_action="cascade" update_action="cascade" >
				<fk_column name="VLANID" pk="VLANID" />
			</fk>
			<fk name="fk_netdevs_0" to_schema="Default" to_table="nodes" delete_action="cascade" update_action="cascade" >
				<fk_column name="node" pk="ID" />
			</fk>
		</table>
		<table name="netgens" prior="netgen" >
			<comment><![CDATA[Network generator]]></comment>
			<column name="name" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="INCR" type="INTEGER" jt="4" mandatory="y" >
				<defo><![CDATA[-1]]></defo>
				<comment><![CDATA[Increment to add for next address]]></comment>
			</column>
			<column name="ID" type="INTEGER" jt="4" mandatory="y" />
			<index name="pk_netgens" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="nodegroups" >
			<column name="ID" type="INTEGER" jt="4" mandatory="y" />
			<column name="name" type="VARCHAR" length="128" jt="12" mandatory="y" />
			<column name="reslevel" type="INTEGER" jt="4" />
			<column name="reskey" type="VARCHAR" length="128" jt="12" definition="(name)" spec="computed" mandatory="y" >
				<comment><![CDATA[synonym for name.]]></comment>
			</column>
			<index name="pk_nodegroups" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<fk name="fk_nodegroups" to_schema="Default" to_table="reslevels" delete_action="cascade" update_action="cascade" >
				<fk_column name="reslevel" pk="ID" />
			</fk>
		</table>
		<table name="nodes" >
			<comment><![CDATA[basic nodes table]]></comment>
			<column name="ID" type="INTEGER" jt="4" mandatory="y" />
			<column name="name" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="rack" type="INTEGER" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="rank" type="INTEGER" jt="4" mandatory="y" />
			<column name="appliance" type="INTEGER" length="128" jt="4" >
				<comment><![CDATA[kinds of appliance]]></comment>
			</column>
			<column name="dist" type="INTEGER" jt="4" >
				<comment><![CDATA[which distribution it should use]]></comment>
			</column>
			<column name="installaction" type="INTEGER" length="128" jt="4" >
				<comment><![CDATA[what action to take for installation]]></comment>
			</column>
			<column name="runaction" type="INTEGER" jt="4" >
				<comment><![CDATA[action to take when running]]></comment>
			</column>
			<column name="managed" type="BOOLEAN" jt="-7" >
				<defo><![CDATA[True]]></defo>
				<comment><![CDATA[Is this a managed node]]></comment>
			</column>
			<column name="reslevel" prior="priority" type="INTEGER" jt="4" >
				<comment><![CDATA[reference to the 'node' reslevel entry in reslevels]]></comment>
			</column>
			<column name="reskey" type="VARCHAR" length="256" jt="12" definition="(name)" spec="computed" />
			<column name="boot" type="VARCHAR" length="32" jt="12" mandatory="y" >
				<defo><![CDATA['run']]></defo>
				<comment><![CDATA[the next boot state of the node]]></comment>
			</column>
			<index name="pk_nodes" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<constraint name="Cns_nodes" >
				<string><![CDATA[boot in ('install','os','run')]]></string>
				<comment><![CDATA[check boot type]]></comment>
			</constraint>
			<fk name="fk_nodes" to_schema="Default" to_table="bootactions" delete_action="cascade" update_action="cascade" >
				<fk_column name="installaction" pk="ID" />
			</fk>
			<fk name="fk_nodes_0" to_schema="Default" to_table="bootactions" delete_action="cascade" update_action="cascade" >
				<fk_column name="runaction" pk="ID" />
			</fk>
			<fk name="fk_nodes_1" to_schema="Default" to_table="reslevels" delete_action="cascade" update_action="cascade" >
				<fk_column name="reslevel" pk="ID" />
			</fk>
			<fk name="fk_nodes_2" to_schema="Default" to_table="appliances" delete_action="cascade" update_action="cascade" >
				<fk_column name="appliance" pk="ID" />
			</fk>
			<fk name="fk_nodes_3" to_schema="Default" to_table="distributions" delete_action="setNull" update_action="cascade" >
				<fk_column name="dist" pk="ID" />
			</fk>
		</table>
		<table name="partitions" >
			<comment><![CDATA[node partition information]]></comment>
			<column name="ID" type="INTEGER" jt="4" mandatory="y" />
			<column name="node" type="INTEGER" jt="4" mandatory="y" >
				<comment><![CDATA[Node that this partition is part of]]></comment>
			</column>
			<column name="device" type="VARCHAR" length="128" jt="12" >
				<comment><![CDATA[physical device (e.g., sda, ....)]]></comment>
			</column>
			<column name="mountpoint" type="VARCHAR" length="128" jt="12" >
				<comment><![CDATA[where mounted in  the file system]]></comment>
			</column>
			<column name="SectorStart" type="INTEGER" jt="4" mandatory="y" />
			<column name="SectorSize" type="INTEGER" jt="4" mandatory="y" >
				<defo><![CDATA[512]]></defo>
				<comment><![CDATA[size of sectors in bytes]]></comment>
			</column>
			<column name="PartitionSize" prior="ParitionSize" type="INTEGER" jt="4" mandatory="y" >
				<comment><![CDATA[number of sectors]]></comment>
			</column>
			<column name="PartitionID" type="INTEGER" jt="4" mandatory="y" />
			<column name="FStype" type="VARCHAR" length="128" jt="12" mandatory="y" >
				<comment><![CDATA[type of file system - eg. ext4, xfs, zfs, swap]]></comment>
			</column>
			<column name="PartitionFlags" type="VARCHAR" length="128" jt="12" />
			<column name="FormatFlags" type="VARCHAR" length="128" jt="12" />
			<column name="AutoReformat" type="BOOLEAN" jt="-7" mandatory="y" >
				<defo><![CDATA[FALSE]]></defo>
				<comment><![CDATA[Reformat this partition automatically on reinstallation]]></comment>
			</column>
			<index name="pk_partitions" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<fk name="fk_partitions" to_schema="Default" to_table="nodes" delete_action="cascade" update_action="cascade" >
				<fk_column name="node" pk="ID" />
			</fk>
		</table>
		<table name="reslevels" prior="priorities" >
			<comment><![CDATA[reslevels - resolution level or priority.
attributes, routes, firewall rules all have reslevels attached to them.
Global is the lowest priority, Node is the highest.   For a node, the version of particular attribute, firewall, route
used is resolved by the one with highest priority.]]></comment>
			<column name="ID" type="INTEGER" jt="4" mandatory="y" />
			<column name="resname" prior="pname" type="VARCHAR" length="100" jt="12" mandatory="y" >
				<comment><![CDATA[priority name]]></comment>
			</column>
			<column name="level" type="INTEGER" jt="4" mandatory="y" >
				<comment><![CDATA[0 - lowest priority]]></comment>
			</column>
			<index name="pk_priorities" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="unq_priorities" unique="UNIQUE_KEY" >
				<column name="resname" />
				<column name="level" />
			</index>
		</table>
		<table name="rolls" >
			<comment><![CDATA[rolls that are part of the cluster]]></comment>
			<column name="ID" type="INTEGER" jt="4" mandatory="y" />
			<column name="name" type="VARCHAR" length="256" jt="12" mandatory="y" />
			<column name="version" type="VARCHAR" length="128" jt="12" mandatory="y" />
			<column name="arch" type="VARCHAR" length="32" jt="12" mandatory="y" >
				<defo><![CDATA['x86_64']]></defo>
			</column>
			<column name="os" type="VARCHAR" length="32" jt="12" mandatory="y" >
				<defo><![CDATA['linux']]></defo>
			</column>
			<column name="enabled" type="BOOLEAN" jt="-7" mandatory="y" >
				<defo><![CDATA[True]]></defo>
			</column>
			<index name="pk_rolls" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="routes" >
			<comment><![CDATA[IP Routing Table]]></comment>
			<column name="ID" type="INTEGER" jt="4" mandatory="y" />
			<column name="network" type="VARCHAR" length="256" jt="12" mandatory="y" >
				<comment><![CDATA[network part of the route eg. 192.168.1.0]]></comment>
			</column>
			<column name="netmask" type="VARCHAR" length="256" jt="12" mandatory="y" >
				<comment><![CDATA[matching netmask]]></comment>
			</column>
			<column name="nettype" type="VARCHAR" length="4" jt="12" mandatory="y" >
				<defo><![CDATA['IPV4']]></defo>
				<comment><![CDATA[IPV4,IPV6,IPMI]]></comment>
			</column>
			<column name="gateway" type="VARCHAR" length="256" jt="12" >
				<comment><![CDATA[destination for gateway]]></comment>
			</column>
			<column name="device" type="INTEGER" length="128" jt="4" >
				<comment><![CDATA[cross-ref to netdevs table if a device route]]></comment>
			</column>
			<column name="reslevel" prior="priority" type="INTEGER" jt="4" >
				<comment><![CDATA[cross-ref to reslevels table]]></comment>
			</column>
			<column name="reskey" prior="pkey" type="VARCHAR" length="256" jt="12" mandatory="y" >
				<defo><![CDATA['global']]></defo>
				<comment><![CDATA[key for resolution level (E.g. 'compute' for an appliance route)]]></comment>
			</column>
			<index name="pk_routes" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<constraint name="Cns_routes" >
				<string><![CDATA[nettype in ('IPV4','IPV6','IPMI')]]></string>
				<comment><![CDATA[nettype in ('IPV4','IPV6','IPMI')]]></comment>
			</constraint>
			<fk name="fk_routes" to_schema="Default" to_table="subnets" delete_action="cascade" update_action="cascade" >
				<fk_column name="network" pk="ID" />
			</fk>
			<fk name="fk_routes_0" to_schema="Default" to_table="reslevels" delete_action="cascade" update_action="cascade" >
				<fk_column name="reslevel" pk="ID" />
			</fk>
		</table>
		<table name="subnets" prior="networks" >
			<comment><![CDATA[logical network information]]></comment>
			<column name="name" prior="netname" type="VARCHAR" length="32" jt="12" mandatory="y" >
				<comment><![CDATA[logical name of network]]></comment>
			</column>
			<column name="nettype" prior="type" type="VARCHAR" length="4" jt="12" mandatory="y" >
				<defo><![CDATA['IPV4']]></defo>
				<comment><![CDATA[IPv4/IPv6/IPMI]]></comment>
			</column>
			<column name="network" type="VARCHAR" length="256" jt="12" mandatory="y" >
				<comment><![CDATA[IP of network after applying mask, eg. 10.1.3.0]]></comment>
			</column>
			<column name="prefix" type="INTEGER" jt="4" mandatory="y" >
				<defo><![CDATA[24]]></defo>
				<comment><![CDATA[netmask prefix 24 = 255.255.255.0]]></comment>
			</column>
			<column name="servedns" type="BOOLEAN" jt="-7" mandatory="y" >
				<defo><![CDATA[True]]></defo>
				<comment><![CDATA[Should configure and serve dns for this network]]></comment>
			</column>
			<column name="netgen" type="INTEGER" length="32" jt="4" >
				<comment><![CDATA[Which Network Address Generator to use]]></comment>
			</column>
			<column name="ID" type="INTEGER" jt="4" mandatory="y" />
			<column name="nextFree" type="VARCHAR" length="256" jt="12" mandatory="y" >
				<comment><![CDATA[next Available IP address in this subnet]]></comment>
			</column>
			<index name="pk_networks" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<constraint name="Cns_networks" >
				<string><![CDATA[nettype in ('IPV4','IPV6','IPMI')]]></string>
			</constraint>
			<fk name="fk_subnets" to_schema="Default" to_table="netgens" delete_action="cascade" update_action="cascade" >
				<fk_column name="netgen" pk="ID" />
			</fk>
		</table>
		<table name="vlans" prior="VLANS" >
			<comment><![CDATA[VLAN definitions]]></comment>
			<column name="VLANID" type="INTEGER" jt="4" mandatory="y" >
				<comment><![CDATA[Numerical VLAN ID]]></comment>
			</column>
			<column name="description" prior="Description" type="VARCHAR" length="512" jt="12" />
			<column name="subnet" type="INTEGER" jt="4" >
				<comment><![CDATA[logical subnet this vlan is attached to]]></comment>
			</column>
			<column name="ID" type="INTEGER" jt="4" definition="(VLANID)" spec="computed" mandatory="y" />
			<index name="pk_VLANS" unique="PRIMARY_KEY" >
				<column name="VLANID" />
			</index>
			<fk name="fk_vlans" to_schema="Default" to_table="subnets" delete_action="cascade" update_action="cascade" >
				<fk_column name="subnet" pk="ID" />
			</fk>
		</table>
		<view name="allattrsview" >
			<comment><![CDATA[This is a view of  ALL global,appliance, and node/host level attributes.   The selections 'replicate' all global attrs for each host and all appliance-level attrs for each node.  The companion attrsview provides the precedence resolved attrs.]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS
select n.name as node, a.attr, a.value, a.shadow, r.resname, r.level from nodes n, attrs a inner join reslevels r
 where a.reslevel=r.id and r.resname='global' 
UNION
select n.name as node, a.attr, a.value, a.shadow, r.resname, r.level from nodes n inner join attrs a on n.reslevel
=a.reslevel inner join reslevels r on a.reslevel=r.id where n.name = a.reskey
UNION
select n.name as node, a.attr, a.value, a.shadow, r.resname, r.level from nodes n inner join appliances ap on n.appliance=ap.id inner join attrs a on ap.reslevel=a.reslevel inner join reslevels r on a.reslevel=r.id where ap.name = a.
reskey
UNION 
select gm.node,a.attr,a.value,a.shadow,gm.resname,gm.level from groupmembersview gm
inner join attrsview a on gm.resname=a.resname where gm.reskey=a.reskey
ORDER by node,attr;]]></view_script>
		</view>
		<view name="attrsview" >
			<comment><![CDATA[Attrributes with priority and name expanded from the priorities table.
If an attribute has no priority, at picks global]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS SELECT
a.ID,a.attr,a.value,a.shadow,r.resname,a.reskey,r.level
FROM attrs a LEFT JOIN reslevels r on a.reslevel=r.id;]]></view_script>
		</view>
		<view name="firewallsview" >
			<view_script><![CDATA[CREATE VIEW ${fullName} AS SELECT
f.ID,f.rulename,f.rulesrc,si.name as inSubnet, so.name as OutSubnet,
f.service,f.protocol,f.action,f.chain,f.flags,f.comment,rl.resname,f.reskey,rl.level
FROM firewalls f LEFT JOIN subnets si on f.InSubnet=si.ID
LEFT JOIN subnets so on f.OutSubnet=so.ID
LEFT JOIN reslevels rl on f.reslevel=rl.ID]]></view_script>
		</view>
		<view name="groupmembersview" >
			<comment><![CDATA[nodegroups with name of group and names of group members]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS SELECT 
ng.name as groupname, n.name as node, r.resname, ng.reskey, r.level FROM
nodegroups ng INNER JOIN reslevels r ON ng.reslevel = r.ID
INNER JOIN groupmembers gm ON gm.nodegroup = ng.id 
INNER JOIN nodes n ON gm.nodeid=n.id
ORDER BY groupname, node]]></view_script>
		</view>
		<view name="hwinventoryview" >
			<view_script><![CDATA[CREATE VIEW ${fullName} AS SELECT
hw.id, n.name, hw.component, hw.subtype, hw.count, hw.comment 
FROM hwinventory hw INNER JOIN node n on hw.id=n.id
ORDER BY name,component,subtype;]]></view_script>
		</view>
		<view name="netdevsview" >
			<view_script><![CDATA[CREATE VIEW ${fullName}  AS SELECT 
nd.id, n.name as node, nd.device, nd.mac, nd.module, nd.devtype, nd.options,
net.name as netname, ip.addr, net.prefix, net.nettype, nd.vlanid, 
vl.subnet as logicalVLAN FROM netdevs nd 
LEFT JOIN ipaddrs ip ON ip.netdev=nd.id 
LEFT join vlansview vl on vl.vlanid=nd.vlanid 
LEFT JOIN subnets net on ip.subnet=net.id INNER JOIN nodes n on nd.node=n.id]]></view_script>
		</view>
		<view name="nodesview" >
			<comment><![CDATA[integrated view of nodes, appliance, etc.]]></comment>
			<view_script><![CDATA[CREATE VIEW nodesview AS SELECT
n.id,n.name as node,n.rack,n.rank,ba.action as installaction,
bb.action as runaction,n.boot, n.managed,app.name as appliance,app.graph
FROM nodes n INNER JOIN appliances app
on n.appliance=app.id
LEFT JOIN bootactions ba on n.installaction=ba.ID 
LEFT JOIN bootactions bb on n.runaction=bb.ID]]></view_script>
		</view>
		<view name="partitionsview" >
			<view_script><![CDATA[CREATE VIEW ${fullName} AS SELECT
p.id, n.name as node, p.device, p.mountpoint, p.SectorStart, p.SectorSize,
p.PartitionSize, p.PartitionID,p.fstype,p.PartitionFlags,p.formatFlags,
p.AutoReformat from partitions p INNER JOIN nodes n ON p.node=n.id 
ORDER by node,device]]></view_script>
		</view>
		<view name="routesview" >
			<comment><![CDATA[routesview with device and reslevels cross references filled in]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS SELECT
r.id,r.network,r.netmask,r.gateway,r.nettype,d.device,rl.resname,r.reskey,rl.level
FROM routes r LEFT JOIN reslevels rl on r.reslevel=rl.ID
LEFT JOIN netdevs d on r.device=d.ID;]]></view_script>
		</view>
		<view name="vlansview" >
			<view_script><![CDATA[CREATE VIEW ${fullName}  AS SELECT VLANS.VLANID,VLANS.description,sub.name as subnet FROM
VLANS LEFT JOIN subnets sub on VLANS.subnet=sub.ID]]></view_script>
		</view>
		<trigger name="Trigger_Appliance" id="Trigger-12b8" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER trigger_appliance_insert
AFTER  INSERT ON appliances
BEGIN
  UPDATE appliances set reslevel = (select id from reslevels r where r.resname='appliance') where appliances.id = new.id;
END;

CREATE TRIGGER trigger_appliances_update 
AFTER UPDATE on appliances 
WHEN old.name <> new.name OR
   old.reslevel <> new.reslevel
BEGIN
  UPDATE attrs set reskey=new.reskey where attrs.reslevel = old.reslevel and attrs.reskey = old.reskey;
  UPDATE attrs set reslevel=new.reslevel where attrs.reslevel=old.reslevel and attrs.reskey=new.reskey;
  UPDATE routes set reskey=new.reskey where routes.reslevel = old.reslevel and routes.reskey = old.reskey;
  UPDATE routes set reslevel=new.reslevel where routes.reslevel=old.reslevel and routes.reskey=new.reskey;
  UPDATE firewalls set reskey=new.reskey where firewalls.reslevel = old.reslevel and firewalls.reskey = old.reskey;
  UPDATE firewalls set reslevel=new.reslevel where firewalls.reslevel=old.reslevel and firewalls.reskey=new.reskey;
END;

CREATE TRIGGER trigger_appliance_delete
BEFORE DELETE on appliances
BEGIN
  DELETE FROM attrs where attrs.reslevel=reslevel and attrs.reskey=reskey;
  DELETE FROM routes where routes.reslevel=reslevel and routes.reskey=reskey;
  DELETE FROM firewalls where firewalls.reslevel=reslevel and firewalls.reskey=reskey;
END;]]></string>
		</trigger>
		<trigger name="Trigger_Firewalls" id="Trigger-1c61" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER trigger_firewall_insert
AFTER  INSERT ON firewalls
BEGIN
  UPDATE firewalls set reslevel = (select id from reslevels r where r.resname='global') where firewalls.id = new.id and reslevel is NULL;
END;
]]></string>
		</trigger>
		<trigger name="Trigger_attrs" id="Trigger-1b80" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER trigger_attr_insert
AFTER  INSERT ON attrs 
BEGIN
  UPDATE attrs set reslevel = (select id from reslevels r where r.resname='global') where attrs.reslevel is NULL;
END;]]></string>
		</trigger>
		<trigger name="Trigger_node" id="Trigger-2d9" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER trigger_node_insert
AFTER  INSERT ON nodes
BEGIN
  UPDATE nodes set reslevel = (select id from reslevels r where r.resname='node') where nodes.id = new.id;
END;

CREATE TRIGGER trigger_node_update 
AFTER UPDATE on nodes 
WHEN old.name <> new.name OR
   old.reslevel <> new.reslevel
BEGIN
  UPDATE attrs set reskey=new.name where attrs.reslevel = old.reslevel and attrs.reskey = old.name;
  UPDATE attrs set reslevel=new.reslevel where attrs.reslevel=old.reslevel and attrs.reskey=new.name;
  UPDATE routes set reskey=new.name where routes.reslevel = old.reslevel and routes.reskey = old.name;
  UPDATE routes set reslevel=new.reslevel where routes.reslevel=old.reslevel and routes.reskey=new.name;
  UPDATE firewalls set reskey=new.name where firewalls.reslevel = old.reslevel and firewalls.reskey = old.name;
  UPDATE firewalls set reslevel=new.reslevel where firewalls.reslevel=old.reslevel and firewalls.reskey=new.name;
END;

CREATE TRIGGER trigger_node_delete
BEFORE DELETE on nodes
BEGIN
  DELETE FROM attrs where attrs.reslevel=reslevel and attrs.reskey=name;
  DELETE FROM routes where routes.reslevel=reslevel and routes.reskey=name;
  DELETE FROM firewalls where firewalls.reslevel=reslevel and firewalls.reskey=name;
END;]]></string>
		</trigger>
		<trigger name="Trigger_nodegroups" id="Trigger-12dd" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER trigger_nodegroups_insert
AFTER  INSERT ON nodegroups
BEGIN
  UPDATE nodegroups set reslevel = (select id from reslevels r where r.resname='groups') where nodegroups.reslevel is NULL;
END;

]]></string>
		</trigger>
		<trigger name="Trigger_routes" id="Trigger-1086" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER trigger_route_insert
AFTER  INSERT ON routes
BEGIN
  UPDATE routes set reslevel = (select id from reslevels r where r.resname='global') WHERE routes.reslevel is NULL;
END;]]></string>
		</trigger>
	</schema>
	<connector name="MyDb" database="MySql" host="localhost" port="3306" user="root" />
	<connector name="Sqlite" database="Sqlite" driver_class="org.sqlite.JDBC" driver_jar="sqlite-jdbc-3.36.0.3.jar" driver_desc="Standard" host="localhost" port="7210" instance="C:/Users/phili/OneDrive - University of California - Irvine/Rocks-Design/rocks8" />
	<layout name="Rocks8 DB Design" id="Layout-142e" show_relation="columns" >
		<entity schema="Default" name="allattrsview" color="3986C1" x="400" y="368" />
		<entity schema="Default" name="appliances" color="C1D8EE" x="528" y="48" />
		<entity schema="Default" name="attrs" color="C1D8EE" x="400" y="224" />
		<entity schema="Default" name="attrsview" color="3986C1" x="400" y="176" />
		<entity schema="Default" name="bootactions" color="C1D8EE" x="48" y="448" />
		<entity schema="Default" name="bootflags" color="C1D8EE" x="224" y="480" />
		<entity schema="Default" name="distributions" color="C1D8EE" x="1296" y="64" />
		<entity schema="Default" name="firewalls" color="C1D8EE" x="1072" y="384" />
		<entity schema="Default" name="firewallsview" color="3986C1" x="1072" y="336" />
		<entity schema="Default" name="groupmembers" color="C1D8EE" x="944" y="128" />
		<entity schema="Default" name="groupmembersview" color="3986C1" x="944" y="64" />
		<entity schema="Default" name="hwinventory" color="C1D8EE" x="240" y="224" />
		<entity schema="Default" name="hwinventoryview" color="3986C1" x="240" y="176" />
		<entity schema="Default" name="ipaddrs" color="C1D8EE" x="384" y="656" />
		<entity schema="Default" name="netdevs" color="C1D8EE" x="240" y="656" />
		<entity schema="Default" name="netdevsview" color="3986C1" x="240" y="832" />
		<entity schema="Default" name="netgens" color="C1D8EE" x="816" y="704" />
		<entity schema="Default" name="nodegroups" color="C1D8EE" x="736" y="128" />
		<entity schema="Default" name="nodes" color="C1D8EE" x="48" y="176" />
		<entity schema="Default" name="nodesview" color="3986C1" x="48" y="112" />
		<entity schema="Default" name="partitions" color="C1D8EE" x="48" y="624" />
		<entity schema="Default" name="partitionsview" color="3986C1" x="48" y="864" />
		<entity schema="Default" name="reslevels" color="C1D8EE" x="688" y="352" />
		<entity schema="Default" name="rolls" color="C1D8EE" x="1168" y="64" />
		<entity schema="Default" name="routes" color="C1D8EE" x="960" y="464" />
		<entity schema="Default" name="routesview" color="3986C1" x="960" y="416" />
		<entity schema="Default" name="subnets" color="C1D8EE" x="656" y="656" />
		<entity schema="Default" name="vlans" color="C1D8EE" x="496" y="656" />
		<entity schema="Default" name="vlansview" color="3986C1" x="496" y="768" />
		<script name="SQL_Editor" id="Editor-880" language="SQL" >
			<string><![CDATA[CREATE TABLE appliances ( 
	ID                   INTEGER NOT NULL  PRIMARY KEY  ,
	name                 VARCHAR(128) NOT NULL    ,
	graphStart           VARCHAR(128)     ,
	description          VARCHAR(512)     ,
	graph                VARCHAR(125)  DEFAULT 'default'   
 );
]]></string>
		</script>
		<script name="SQL_Editor_001" id="Editor-1fec" language="SQL" >
			<string><![CDATA[CREATE TABLE nodegroups ( 
	ID                   INTEGER NOT NULL  PRIMARY KEY  ,
	name                 VARCHAR(128) NOT NULL    ,
	reslevel             INTEGER NOT NULL    ,
	reskey               AS name 
 );

CREATE TABLE groupmembers ( 
	ID                   INTEGER NOT NULL  PRIMARY KEY  ,
	nodegroup            INTEGER     ,
	nodeid               INTEGER     ,
	groupmemberid        INTEGER     ,
	FOREIGN KEY ( nodegroup ) REFERENCES nodegroups( ID )  ,
	CHECK ( (nodeid IS NULL AND groupmemberid IS NOT NULL) OR (nodeid IS NOT NULL AND groupmemberId IS NULL) )
 );
]]></string>
		</script>
		<script name="SQL_Editor_002" id="Editor-11e2" language="SQL" >
			<string><![CDATA[CREATE TABLE nodegroups ( 
	ID                   INTEGER NOT NULL  PRIMARY KEY  ,
	name                 VARCHAR(128) NOT NULL    ,
	reslevel             INTEGER NOT NULL    ,
	reskey               AS name 
 );

CREATE TABLE nodes ( 
	ID                   INTEGER NOT NULL  PRIMARY KEY  ,
	name                 VARCHAR(100) NOT NULL    ,
	rack                 INTEGER  DEFAULT 0   ,
	rank                 INTEGER NOT NULL    ,
	appliance            INTEGER     ,
	dist                 INTEGER     ,
	installaction        INTEGER     ,
	runaction            INTEGER     ,
	managed              BOOLEAN  DEFAULT True   ,
	reslevel             INTEGER     ,
	reskey               AS name 
 );

CREATE VIEW dbs_validate_view AS SELECT 
ng.name as groupname, n.name as node, r.resname, ng.reskey, r.level FROM
nodegroups ng INNER JOIN reslevels r ON ng.reslevel = r.ID
INNER JOIN groupmembers gm ON gm.nodegroup = ng.id 
INNER JOIN nodes n ON gm.nodeid=n.id
ORDER BY groupnamae, node;
]]></string>
		</script>
	</layout>
</project>